cmake_minimum_required(VERSION 3.6)
project(CalibratePlugin)

set(CMAKE_CXX_STANDARD 11)
IF(APPLE)
    set(OpenCV_DIR "/usr/local/opt/opencv3/share/OpenCV")
ELSEIF(WIN32)
    set(OpenCV_DIR "D:/SDK/opencv/3.0")
ENDIF(APPLE)
FIND_PACKAGE(OpenCV REQUIRED)
set(SOURCE_FILES library.cpp library.h)
if (APPLE)
    add_library(CalibratePlugin MODULE ${SOURCE_FILES})
    set_target_properties(CalibratePlugin PROPERTIES BUNDLE TRUE)
    ADD_CUSTOM_COMMAND(TARGET CalibratePlugin POST_BUILD COMMAND cp -r ./CalibratePlugin.bundle ../../../Assets/Plugins/ )
ELSEIF(WIN32)
    add_library(CalibratePlugin SHARED ${SOURCE_FILES})
    add_definitions(-DPLUGIN_API_BUILD)
    # get_target_property(DLL_LOC CalibratePlugin LOCATION)
    ADD_CUSTOM_COMMAND(TARGET CalibratePlugin POST_BUILD COMMAND cp  \"$<TARGET_FILE:CalibratePlugin>\" \"${CMAKE_SOURCE_DIR}/../../Assets/Plugins/\" )
	# ADD_CUSTOM_COMMAND(TARGET CalibratePlugin POST_BUILD COMMAND echo $<TARGET_FILE:CalibratePlugin> )
ENDIF()

target_link_libraries(CalibratePlugin ${OpenCV_LIBS})
add_executable(Question Question.cpp)
target_link_libraries(Question ${OpenCV_LIBS})

add_executable(test_findchessboard test/test_findchessboard.cpp)
target_link_libraries(test_findchessboard ${OpenCV_LIBS})
# ADD_CUSTOM_COMMAND(TARGET CalibratePlugin POST_BUILD COMMAND cp -r ./CalibratePlugin.bundle ../../../Assets/Plugins/ )
